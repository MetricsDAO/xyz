// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_PRISMA_URI")
}

model User {
  id        String         @id @default(cuid()) @map("_id")
  address   String         @default("")
  createdAt DateTime       @default(now())
  wallet    Wallet[]
  Ipfs      IpfsMetadata[]
  Reward    Reward[]
}

model Wallet {
  id          String   @id @default(cuid()) @map("_id")
  address     String
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  networkName String
  chain       Network  @relation(fields: [networkName], references: [name])

  @@unique([userId, networkName])
}

// Respresents a project or blockchain that MDAO supports. Appears in labor market creation flow and search
model Project {
  id        String   @id @default(cuid()) @map("_id")
  slug      String   @unique
  name      String
  createdAt DateTime @default(now())
}

// Represents a token that MDAO supports. Appear in labor market creation flows and search.
model Token {
  id              String   @id @default(cuid()) @map("_id")
  symbol          String
  decimals        Int      @default(18)
  iou             Boolean  @default(false)
  name            String
  networkName     String
  contractAddress String
  chain           Network  @relation(fields: [networkName], references: [name])
  Reward          Reward[]

  @@unique([symbol, networkName])
}

model Network {
  id     String   @id @default(cuid()) @map("_id")
  name   String   @unique
  token  Token[]
  wallet Wallet[]
}

model IpfsMetadata {
  id          String   @id @default(cuid()) @map("_id")
  hash        String
  url         String?
  sizeBytes   Int
  timestamp   DateTime
  createdById String
  createdBy   User     @relation(fields: [createdById], references: [id])
}

model Reward {
  id                          String   @id @default(cuid()) @map("_id")
  laborMarketAddress          String
  submissionId                String
  hasReward                   Boolean
  paymentTokenAmount          String
  reputationTokenAmount       String
  hasClaimed                  Boolean
  isIou                       Boolean
  iouSignature                String?
  iouClientTransactionSuccess Boolean? // Not to be trusted. Used by front-end to hide the redeem button.
  iouHasRedeemed              Boolean?
  userId                      String
  user                        User     @relation(fields: [userId], references: [id])
  tokenId                     String?
  token                       Token?   @relation(fields: [tokenId], references: [id])

  @@unique([laborMarketAddress, submissionId])
}
